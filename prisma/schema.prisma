generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model delivery {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  status     String   @db.VarChar(255)
  driver_id  String   @db.Uuid
  order_id   String   @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  user       user     @relation(fields: [driver_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  order      order    @relation(fields: [order_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model menu_item {
  id               String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name             String           @db.VarChar(255)
  price            Int
  restaurant_id    String           @db.Uuid
  created_at       DateTime         @default(now()) @db.Timestamp(6)
  updated_at       DateTime         @default(now()) @db.Timestamp(6)
  pizza_restaurant pizza_restaurant @relation(fields: [restaurant_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  order_item       order_item[]
}

model order {
  id               String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  status           String           @db.VarChar(255)
  customer_id      String           @db.Uuid
  restaurant_id    String           @db.Uuid
  created_at       DateTime         @default(now()) @db.Timestamp(6)
  updated_at       DateTime         @default(now()) @db.Timestamp(6)
  delivery         delivery[]
  user             user             @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  pizza_restaurant pizza_restaurant @relation(fields: [restaurant_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  order_item       order_item[]
}

model order_item {
  id           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  quantity     Int
  menu_item_id String    @db.Uuid
  order_id     String    @db.Uuid
  created_at   DateTime  @default(now()) @db.Timestamp(6)
  updated_at   DateTime  @default(now()) @db.Timestamp(6)
  menu_item    menu_item @relation(fields: [menu_item_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  order        order     @relation(fields: [order_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model pizza_restaurant {
  id          String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name        String      @db.VarChar(255)
  description String?     @db.VarChar(255)
  image       String?     @db.VarChar(255)
  created_at  DateTime    @default(now()) @db.Timestamp(6)
  updated_at  DateTime    @default(now()) @db.Timestamp(6)
  user_id     String      @db.Uuid
  tenant_id   String      @db.VarChar(255)
  menu_item   menu_item[]
  order       order[]
  user        user        @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id               String             @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email            String             @unique @db.VarChar(255)
  firstName        String?            @db.VarChar(255)
  lastName         String?            @db.VarChar(255)
  roq_user_id      String             @db.VarChar(255)
  tenant_id        String             @db.VarChar(255)
  created_at       DateTime           @default(now()) @db.Timestamp(6)
  updated_at       DateTime           @default(now()) @db.Timestamp(6)
  delivery         delivery[]
  order            order[]
  pizza_restaurant pizza_restaurant[]
}
